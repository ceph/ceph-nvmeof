#!/usr/bin/env bash

# Modified version of github.com/spdk/docker

set -e

spdk_repo=$(mktemp -dt "spdk.XXXXXX")
spdk_tar=/spdk.tar.gz

cleanup() {

	rm -f "$HOME/rpmbuild/rpm/x86_64/"*.rpm
	rm -f "$spdk_tar"
	rm -rf "$spdk_repo"
}

trap 'cleanup' EXIT

if [[ ! -e $spdk_tar ]]; then
	printf 'Missing %s\n' "$spdk_tar" >&2
	exit 1
fi

tar -C "$spdk_repo" -xf "$spdk_tar"

# Required for building RPM
dnf install -y rpm-build
dnf install -y librbd-devel

echo "dnf install -y rpm-build"

# Spice it a bit with supported sources
"$spdk_repo/spdk/scripts/pkgdep.sh" -d


# "$spdk_repo/test/common/config/vm_setup.sh" --test-conf=fio


# HACK: In case we received a .tar with built SPDK we need to overwrite the
# configuration to update all the paths make would need to lookup - this is
# needed since we execute inside a different mount namespace so we won't be
# able to find any absolute paths that were used prior creating the .tar.
"$spdk_repo/spdk/configure" --with-rbd > /dev/null
spdk_version=$(cat $spdk_repo/spdk/VERSION)
# Deploy SPDK inside the container
SPDK_VERSION="${spdk_version}" DEPS="no" "$spdk_repo/spdk/rpmbuild/rpm.sh"

mkdir -p /tmp/rpms
mv "$HOME/rpmbuild/RPMS/x86_64/"*.rpm /tmp/rpms/
# dnf clean all
echo "dnf clean all"
